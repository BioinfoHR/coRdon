% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/codonUsage.R
\docType{methods}
\name{MCB}
\alias{MCB}
\alias{MCB,codonTable-method}
\title{Calculate maximum-likelihood codon bias (MCB)}
\usage{
MCB(cTobject, subsets = list(), self = TRUE, ribosomal = FALSE,
  id_or_name2 = "1", alt.init = TRUE, stop.rm = FALSE,
  filtering = "none", len.threshold = 80)

\S4method{MCB}{codonTable}(cTobject, subsets = list(), self = TRUE,
  ribosomal = FALSE, id_or_name2 = "1", alt.init = TRUE,
  stop.rm = FALSE, filtering = "none", len.threshold = 80)
}
\arguments{
\item{cTobject}{A \code{codonTable} object.}

\item{subsets}{A (named) list of logical vectors, the length of each equal
to \code{getlen(cTobject)}, i.e. the number of sequences in the set, or
character vectors (of any length) containing KEGG/eggNOG annotations,
or codonTable objects (of any length).}

\item{self}{Logical, if \code{TRUE} (default), CU statistic is also
calculated against the average CU of the entire set of sequences.}

\item{ribosomal}{Logical, if \code{TRUE}, CU statistic is also calculated
against the average CU of the ribosomal genes in the sequence set.}

\item{id_or_name2}{
    A single string that uniquely identifies the genetic code to extract.
    Should be one of the values in the \code{id} or \code{name2} columns
    of \code{GENETIC_CODE_TABLE}.
  }

\item{alt.init}{logical, whether to use alternative initiation codons.
Default is \code{TRUE}.}

\item{stop.rm}{Logical, whether to remove stop codons. Default is
\code{FALSE}.}

\item{filtering}{Character vector, one of \code{c("none", "soft", "hard")}.
Specifies whether sequences shorther than some threshold value of
length (in codons), \code{len.threshold}, should be excluded from
calculations. If \code{"none"} (default), length of sequences is not
checked, if \code{"soft"}, a warrning is printed if there are shorter
sequences, and if \code{"hard"}, these sequences are excluded from
calculation.}

\item{len.threshold}{Optional numeric, specifying sequence length,
in codons, used for filtering.}
}
\value{
A matrix with MCB values for every specified subset
   (\code{subsets}, \code{self}, \code{ribosomal}) in columns.

   For definition of maximum-likelihood codon bias (MCB), see
   \href{https://bit.ly/2GlMRyy}{Urrutia and Hurst (2001)}.
}
\description{
Calculate MCB values for every sequence in the given
\code{codonTable} object.
}
\examples{
# load example DNA sequences
exampledir <- system.file("extdata", package = "coRdon")
cT <- codonTable(readSet(exampledir))

# calculate MCB distance to the average CU of the example DNA sequences
mcb <- MCB(cT)
head(mcb)

# also calculate MCB distance to the average CU
# of ribosomal genes among the example DNA sequences
mcb <- MCB(cT, ribosomal = TRUE)
head(mcb)

# calculate MCB distance to the average CU
# of the first 20 example DNA sequences
# (i.e. the first half of the example DNA set)
mcb <- MCB(cT, self = FALSE,
           subsets = list(half = c(rep(TRUE, 20), rep(FALSE, 20))))

# alternatively, you can specify codonTable as a subset
halfcT <- codonTable(codonCounts(cT)[1:20,])
mcb2 <- MCB(cT, self = FALSE, subsets = list(half = halfcT))
all.equal(mcb, mcb2) # TRUE

# filtering
MCB(cT, filtering = "hard", len.threshold = 80) # MCB for 9 sequences
sum(getlen(cT) > 80) # 9 sequences are longer than 80 codons
mcb1 <- MCB(cT, filtering = "none") # no filtering
mcb2 <- MCB(cT, filtering = "soft") # warning
all.equal(mcb1, mcb2) # TRUE

# options for genetic code
mcb <- MCB(cT, stop.rm = TRUE) # don't use stop codons in calculation
mcb <- MCB(cT, alt.init = FALSE) # don't use alternative start codons
mcb <- MCB(cT, id_or_name2 = "2") # use different genetic code, for help
                                  # see `?Biostrings::GENETIC_CODE`

}
